name: deployment

on: 
 push:
   branches:
     - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: setup nodeJS
      uses: actions/setup-node@v2
      with: 
        node-version : 20
    - name: installing the neccessary packages
      working-directory: ./frontend
      run: |
        npm install
        npm run build
        npm start
        echo "Completed"

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
            persist-credentials: false
      - name: setup nodeJS
        uses: actions/setup-node@v2
        with: 
          node-version : 20
      - name: installing the neccessary packages
        working-directory: ./backend
        run: |
          npm install
          npm run build
          npm start
          echo "completed"


  deploy:
    runs-on: self-hosted
    needs: 
      - build-frontend
      - build-backend
    steps:
      - name: checkout code
        uses: actions/checkouct@v2

      - name: installing the node
        uses: actions/setup-node@v2
        with:
          node-version: 20
 
      - name: Deploy to Ubuntu via PowerShell
        shell: pwsh
        run: |
              $password = ConvertTo-SecureString "admin@123" -AsPlainText -Force
              $credential = New-Object System.Management.Automation.PSCredential("ubuntu@192.168.1.126", $password)
              $command = @"
              cd /home/ubuntu/Project
              git pull origin main
              cd frontend
              npm install
              npm run build
              npm start > frontend.log 2>&1 &
              cd backend
              npm install
              npm run build
              npm  start > backend.log 2>&1 &
              "@
              Invoke-Command -ComputerName your-server-ip -Credential $credential -ScriptBlock {
                  param ($cmd)
                  bash -c "$cmd"
              } -ArgumentList $command
    